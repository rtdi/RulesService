<t:TreeTable
        id="TreeTable"
        rows="{path:'/rules', parameters: {arrayNames:['rules']}}"
        selectionMode="Single"
        visibleRowCountMode="Auto"
        enableBusyIndicator="true"
        enableSelectAll="false"
        ariaLabelledBy="title">
    <t:extension>
        <Toolbar>
        	<Label text="Select a Schema"/>
			<Select
				items="{ path: 'schemarules>/schemas',
						sorter: [
							{path: 'configured', descending: true},
							{path: 'schemaname'}
						]
					   }"
				enabled="{= !${state>/locked} }"
				id="schemaselector"
				forceSelection="false"
				change="onSchemaChange">
				<core:ListItem
					key="{schemarules>schemaname}"
					text="{schemarules>schemaname}"
					icon="{path: 'schemarules>configured', formatter: '.schemaIconFormatter' }" />
			</Select>
              <ToolbarSpacer/>
            <Button text="Delete Rule" press="onDelete" />
            <Button text="Validate" press="onValidate"/>
      	</Toolbar>
    </t:extension>
    <t:columns>
        <t:Column>
            <Label text="Fieldname"/>
            <t:template>
                <Text text="{fieldname}" wrapping="false" renderWhitespace="false" />
            </t:template>
        </t:Column>
        <t:Column>
            <Label text="Sample value"/>
            <t:template>
                <Text text="{samplevalue}" />
            </t:template>
        </t:Column>
        <t:Column>
            <Label text="Rule Type"/>
            <t:template>
				<Select
					forceSelection="false"
					visible="{= (${fielddatatype} !== 'ARRAY' &amp;&amp; ${fielddatatype} !== 'RECORD') }"
					selectedKey="{type}"
					change=".onChangeRuleType" >
					<core:Item key="EmptyRule" text="----" />
					<core:Item key="PrimitiveRule" text="Test a column" />
					<core:Item key="TestSetAll" text="Test for all conditions" />
					<core:Item key="TestSetFirstFail" text="Test until one failed" />
					<core:Item key="TestSetFirstPass" text="Test until one passes" />
				</Select>
            </t:template>
        </t:Column>
        <t:Column>
            <Label text="Rule name"/>
            <t:template>
                <Input value="{rulename}" 
                	visible="{= (${fielddatatype} !== 'ARRAY' &amp;&amp; ${fielddatatype} !== 'RECORD') &amp;&amp; ${type} !== 'EmptyRule' }" 
                	enabled="{path: 'state>/roles/config', formatter: '.enableControl'}" />
            </t:template>
        </t:Column>
        <t:Column>
            <Label text="Condition"/>
            <t:template>
            	<HBox visible="{= ${type} === 'PrimitiveRule' }" >
	                <Input value="{condition}" 
	                	valueState="{= (${conditionerror} ? 'Error' : 'None') }"
	                	valueStateText="{conditionerror}"
	                	enabled="{path: 'state>/roles/config', formatter: '.enableControl'}" />
	                <Button icon="sap-icon://zoom-in" press="onFormulaPress" />
	                <core:Fragment fragmentName="com.rtdi.bigdata.connector.ui.fragment.xml.RuleFormula" type="XML" />
	            </HBox>
            </t:template>
        </t:Column>
        <t:Column>
            <Label text="if test fails..."/>
            <t:template>
				<Select forceSelection="false" selectedKey="{iffalse}" 
						visible="{= ${type} === 'PrimitiveRule' }" 
						enabled="{path: 'state>/roles/config', formatter: '.enableControl'}" >
					<core:ListItem key="FAIL" text="Consider Failed" icon="sap-icon://message-warning"></core:ListItem>
					<core:ListItem key="WARN" text="Consider Warning" icon="sap-icon://question-mark"></core:ListItem>
					<core:ListItem key="PASS" text="Consider Passed" icon="sap-icon://message-success"></core:ListItem>
				</Select>
            </t:template>
        </t:Column>
        <t:Column>
            <Label text="Substitute with..."/>
            <t:template>
            	<HBox visible="{= ${type} === 'PrimitiveRule' }" >
	                <Input value="{substitute}" 
	                	valueState="{= (${substituteerror} ? 'Error' : 'None') }"
	                	valueStateText="{substituteerror}"
	                	tooltip="{substituteresult}"
	                	enabled="{path: 'state>/roles/config', formatter: '.enableControl'}" />
	                <Button icon="sap-icon://zoom-in" press="onFormulaPress" />
	                <core:Fragment fragmentName="com.rtdi.bigdata.connector.ui.fragment.xml.SubstitutionFormula" type="XML" />
	            </HBox>
            </t:template>
        </t:Column>
        <t:Column>
            <Label text="Test Result"/>
            <t:template>
                <Button text="{sampleresult}" icon="{path: 'sampleresult', formatter: '.resulttypeFormatter'}"
                	visible="{= (${sampleresult} !== null &amp;&amp; (${type} === 'PrimitiveRule' || ${type}.startsWith('TestSet'))) }" />
            </t:template>
        </t:Column>
    </t:columns>
</t:TreeTable>
